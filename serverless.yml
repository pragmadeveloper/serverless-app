# serverless.yml

service: my-serverless-app # Un nombre único para tu servicio (se usará en AWS)

frameworkVersion: '4' # La versión del framework Serverless con la que es compatible tu configuración

provider:
  name: aws # El proveedor de la nube que vas a usar (en este caso, Amazon Web Services)
  runtime: nodejs18.x # El entorno de ejecución para tus funciones (Node.js versión 18.x)
  region: us-east-1 # La región de AWS donde se desplegará tu servicio. ¡Cámbiala a tu preferida!
  # Puedes añadir otras configuraciones aquí, como variables de entorno, permisos IAM, etc.
  stage: dev # Entorno de despliegue (dev, prod, staging, etc.)
  role: arn:aws:iam::522167228283:role/LambdaExecutionRole-BooksDynamoDBApp.
  httpApi:
    cors: true # Habilita CORS para tu API Gateway (útil para frontend)

plugins:
  - serverless-offline           # Plugin para ejecutar localmente


functions:
  hello: # El nombre de tu función Lambda
    handler: src/handlers/handler.hello # Ruta al archivo (handler.js) y al nombre de la exportación (hello)
    description: Una simple función de saludo.
    events:
      - httpApi: # Define un evento HTTP para esta función
          path: /hello # La ruta URL que activará esta función
          method: get # El método HTTP (GET, POST, PUT, DELETE, ANY)
          # Puedes añadir más eventos aquí, como SQS, S3, Cron, etc.
  create-book:
    handler: src/handlers/create-book.handler
    events:
      - http:
          path: /create-book
          method: post
  get-all-books:
    handler: src/handlers/get-all-books.handler
    events:
      - http:
          path: get-books
          method: get
  get-book-by-id:
    handler: src/handlers/get-book-by-id.handler
    events:
      - http:
          path: get-book
          method: get        
  update-book-by-id:
    handler: src/handlers/update-book-by-id.handler
    events:
      - http:
          path: update-book
          method: put 
  create-user:
    handler: src/handlers/create-user.handler
    events:
      - http:
          path: /create-user
          method: post
  get-all-users:
    handler: src/handlers/get-all-users.handler
    events:
      - http:
          path: get-users
          method: get  
  get-user-by-id:
    handler: src/handlers/get-user-by-id.handler
    events:
      - http:
          path: get-user
          method: get               